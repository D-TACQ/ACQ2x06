#!/bin/sh

mkdir -p /dev/gpio
cd /sys/class/gpio

export_gpio() {
	echo $1 > export
}

getchip() {
	addr=$1
	ls -l gpiochip* | grep $addr | awk '{ print $9 }'
}

setHI() {
	echo 1 > $1
}

setLO() {
	echo 0 > $1
}

setO() {
	echo out >$1/direction
}
setAL() {
	echo 1 >$1/active_low
	if [ "$(cat $1/direction)" = "out" ]; then
		echo 0 >$1/value
	fi
}
mkln() {
	ln -s $PWD/$1/value /dev/gpio/$2
	if [ "x$3" = "xAL" ]; then
		setAL $1
	fi
}

show_act() {
	while [ 1 ]; do
		setHI /dev/gpio/LED_ACT
		sleep 0.5
		setLO /dev/gpio/LED_ACT
		sleep 0.5
	done
}

i2c_reset() {
	setHI /dev/gpio/I2C_RESET
	sleep 0.1
	setLO /dev/gpio/I2C_RESET
	echo +++ I2C_RESET done
}


# Zynq GPIO
export_gpio  0; setO gpio0
export_gpio 47;

mkln gpio0 LED_ACT
show_act &

#export_gpio  9; setO gpio9
#mkln gpio9 I2C_RESET AL
#i2c_reset

mkln gpio47 EXT_WP AL


# i2c gpio 

for pin in $(seq 216 255)
do
	export_gpio $pin
done


for pin in $(seq 240 247) $(seq 232 239)
do
	setO gpio$pin
done


mkdir -p /dev/gpio/CLK/MB/RDW
mkln gpio240 CLK/MB/RDW/R6
mkln gpio241 CLK/MB/RDW/R5
mkln gpio242 CLK/MB/RDW/R4
mkln gpio243 CLK/MB/RDW/R3
mkln gpio244 CLK/MB/RDW/R2
mkln gpio245 CLK/MB/RDW/R1
mkln gpio246 CLK/MB/RDW/R0

mkdir /dev/gpio/CLK/MB/FDW
mkln gpio247 CLK/MB/FDW/F6
mkln gpio232 CLK/MB/FDW/F5
mkln gpio233 CLK/MB/FDW/F4
mkln gpio234 CLK/MB/FDW/F3
mkln gpio235 CLK/MB/FDW/F2
mkln gpio236 CLK/MB/FDW/F1
mkln gpio237 CLK/MB/FDW/F0

mkdir /dev/gpio/CLK/MB/ODW
mkln gpio238 CLK/MB/ODW/S1
mkln gpio239 CLK/MB/ODW/S0


let site=1; while [ $site -le 6 ]; do
	let gpio=248+$site-1
	GPIO=gpio${gpio}
	setAL $GPIO; mkln ${GPIO} fmc${site}_present
	let site=$site+1
done

mkln gpio254 15VP_PGD 		AL
mkln gpio255 15VN_PGD 		AL


for pin in $(seq 224 231) $(seq 216 219)
do
	setO gpio${pin}
done

mkln gpio224 CLK/MB/ICS_CLK2_OE
mkln gpio225 CLK/OSC_X_OE 	AL
mkln gpio226 CLK/OSC_X_CLK_OE	AL
mkln gpio227 CLK/FP_CLK_OE 	AL
mkln gpio228 CLK/FP_OE		AL
mkln gpio229 Si570_OE
mkln gpio230 15VA_EN		AL
mkln gpio231 PSU_SYNC_CLK_OE

mkdir -p /dev/gpio/LED
# CLK TRG swapped pgm 20130928
mkln gpio216 LED/TRG_G 		AL
mkln gpio217 LED/TRG_R 		AL
mkln gpio218 LED/CLK_G 		AL
mkln gpio219 LED/CLK_R 		AL

mkln gpio220 BV_EE
mkln gpio221 BV_RSV1
mkln gpio222 BV_RSV2
mkln gpio223 JTAG14_ALL

# LP3943ISQ

LEDSCHIP=$(getchip 1-0060)
if [ $? -ne 0 ]; then
	echo +++ ERROR: LEDSCHIP NOT FOUND
else
	echo +++ LEDSCHIP FOUND $LEDSCHIP
fi
let LED0=${LEDSCHIP#gpiochip*}
let LED1=$LED0+14

gpioLED() {
	let lgp=$LED0+$1
	echo gpio$lgp
}

for pin in $(seq $LED0 $LED1)
do
	export_gpio $pin
	setO gpio${pin}
done

mkln $(gpioLED  0) FAN_EN 
set.sys /dev/gpio/FAN_EN 0
set.sys /sys/class/pwm/pwmchip0/pwm0/polarity inversed
set.sys /sys/class/pwm/pwmchip0/pwm0/period 100000
set.sys /sys/class/pwm/pwmchip0/pwm0/duty_cycle 50000
set.sys /sys/class/pwm/pwmchip0/pwm0/enable 1

mkln $(gpioLED  1) LED/FMC1_G 	AL
mkln $(gpioLED  2) LED/FMC2_G 	AL
mkln $(gpioLED  3) LED/FMC3_G	AL
mkln $(gpioLED  4) LED/FMC4_G 	AL
mkln $(gpioLED  5) LED/FMC5_G 	AL
mkln $(gpioLED  6) LED/FMC6_G 	AL
mkln $(gpioLED  7) LED/FMC1_R 	AL
mkln $(gpioLED  8) LED/FMC2_R 	AL
mkln $(gpioLED  9) LED/FMC3_R 	AL
mkln $(gpioLED 10) LED/FMC4_R 	AL
mkln $(gpioLED 11) LED/FMC5_R 	AL
mkln $(gpioLED 12) LED/FMC6_R 	AL
mkln $(gpioLED 13) LED/ACT_G  	AL
mkln $(gpioLED 14) LED/ACT_R  	AL
	
clear_leds() {	
	for LED in /dev/gpio/LED/*
	do
		echo 0 > $LED
	done
}

test_leds() {
	for LED in /dev/gpio/LED/*
	do
		setHI $LED
		sleep 0.2
		setLO $LED
	done
}
	
clear_leds
test_leds


# OK, this isn't gpio, but it's handy to put it here:

mkdir -p /dev/hwmon

for S in 0 1 2 3 4 5 6 7
do
	SRC=/sys/class/hwmon/hwmon${S}/device
	if [ -e ${SRC}/temp ]; then
		ID=Z
	else
		ID=$S	
	fi
	DST=/dev/hwmon/${ID}
	mkdir $DST
	
	case ${ID} in
	Z)
		for xx in temp v v_mode vccaux vccbram vccint
		do
			ln -s ${SRC}/${xx} ${DST}/${xx}
		done;;			
	0)
		ln -s ${SRC}/temp1_input ${DST}/temp
		ln -s ${SRC}/in1_input	 ${DST}/15VA_N
		ln -s ${SRC}/in2_input	 ${DST}/15VA_P
		ln -s ${SRC}/in3_input	 ${DST}/5V_P
		ln -s ${SRC}/in4_input	 ${DST}/VADJ;;
	*)
		ln -s ${SRC}/temp1_input ${DST}/temp
		for xx in in1_input in2_input in3_input in4_input
		do
			ln -s ${SRC}/${xx} ${DST}/${xx%*_input}
		done;;
	esac					
done

