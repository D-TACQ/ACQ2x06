#!/usr/local/bin/expect
# usage mb_clk fin fout

set MN "(\[0-9\]*)"

proc daemon {} {
	global MN
	while {1} {
		expect {	
			-re "$MN,$MN" {
				set FIN  $expect_out(1,string)
				set FOUT $expect_out(2,string)
				puts "exec set_mb_clk $FIN $FOUT"
				exec /usr/local/bin/set_mb_clk $FIN $FOUT
			}
			timeout {
				return 0
			}
		}
	}
}

if {$argc == 1} {
	set arg1 [lindex $argv 0]
	if {$arg1 == "-d"} {
		set timeout -1
		daemon
		return 0
	} else {
		puts "Usage: set_mb_clk -d"
		return 1
	}
}
if {$argc != 2} {
	puts "Usage: set_mb_clk fin_kHz fout_kHz"
	return 1
}

set FIN  [lindex $argv 0]
set FOUT [lindex $argv 1]


spawn ob_calc_527 -o - --fin $FIN $FOUT
expect {
	-re "^$MN $MN $MN $MN $MN $MN" {
		puts "Success S:$expect_out(1,string) A:$expect_out(2,string)"
	}
	-re "(.*)\n" {
		puts "Error: $expect_out(1,string)"
		return 1
	}
}

set SP  $expect_out(1,string)
set ACT $expect_out(2,string)
set FDW $expect_out(3,string)
set RDW $expect_out(4,string)
set R	$expect_out(5,string)
set ODW $expect_out(6,string)

set ROOT	"/dev/gpio/CLK/MB"

puts "SP: $SP ACT:$ACT FDW:$FDW RDW:$RDW ODW:$ODW"

proc putBits {root pfx dval} {
	binary scan [binary format c $dval] b* bits
	set knobs [glob -directory $root $pfx*]
	puts "$root $pfx $dval => $bits"
	set bn 0
	foreach K $knobs {
		set xx [string index $bits $bn]
#		puts "set.sys $K $xx"
		set F [open $K w]
		puts $F $xx
		incr bn
	}
}

putBits "$ROOT/FDW/" F $FDW
putBits "$ROOT/RDW/" R $RDW
putBits "$ROOT/ODW/" S $ODW
